root: Program
  root_elements: 
    [0]: DeclFun
      name: function_from_include (example_source/includes/include.f12:1)
      params: 
        [0]: FunParam
          type: TypePrimitive
            kind:  (example_source/includes/include.f12:1)
          name: a (example_source/includes/include.f12:1)
        [1]: FunParam
          type: TypePrimitive
            kind:  (example_source/includes/include.f12:1)
          name: b (example_source/includes/include.f12:1)
      return_type: TypePrimitive
        kind: PRIMITIVE_VOID
      body: StmntBlock
        statements: []
    [1]: DeclFun
      name: add (example_source/main.f12:3)
      params: 
        [0]: FunParam
          type: TypeArray
            inner_type: TypePrimitive
              kind:  (example_source/main.f12:3)
          name: x (example_source/main.f12:3)
        [1]: FunParam
          type: TypePrimitive
            kind:  (example_source/main.f12:3)
          name: y (example_source/main.f12:3)
      return_type: TypePrimitive
        kind:  (example_source/main.f12:3)
      body: StmntBlock
        statements: 
          [0]: StmntReturn
            token:  (example_source/main.f12:4)
            value: ExprAdd
              left: ExprArrayAccess
                array: ExprVar
                  identifier: x (example_source/main.f12:4)
                  decl_node: FunParam
                    type: TypeArray
                      inner_type: TypePrimitive
                        kind:  (example_source/main.f12:3)
                    name: x (example_source/main.f12:3)
                index_expr: ExprLitInt
                  value: 0 (example_source/main.f12:4)
              right: ExprVar
                identifier: y (example_source/main.f12:4)
                decl_node: FunParam
                  type: TypePrimitive
                    kind:  (example_source/main.f12:3)
                  name: y (example_source/main.f12:3)
    [2]: DeclUnit
      name: Human (example_source/main.f12:7)
      fields: 
        [0]: DeclUnitField
          type: TypePrimitive
            kind:  (example_source/main.f12:8)
          name: name (example_source/main.f12:8)
        [1]: DeclUnitField
          type: TypePrimitive
            kind:  (example_source/main.f12:9)
          name: age (example_source/main.f12:9)
        [2]: DeclUnitField
          type: TypeArray
            inner_type: TypePrimitive
              kind:  (example_source/main.f12:10)
          name: addresses (example_source/main.f12:10)
    [3]: DeclFun
      name: inner (example_source/main.f12:13)
      params: []
      return_type: TypeUnit
        unit_name: Human (example_source/main.f12:13)
        unit_decl_node: None
      body: StmntBlock
        statements: 
          [0]: StmntToStdout
            values: 
              [0]: ExprLitStr
                value: Hello (example_source/main.f12:14)
          [1]: StmntReturn
            token:  (example_source/main.f12:15)
            value: ExprCreateUnit
              unit_name: Human (example_source/main.f12:15)
              args: 
                [0]: CreateUnitArg
                  unit_name: Human (example_source/main.f12:15)
                  field: name (example_source/main.f12:15)
                  value: ExprLitStr
                    value: Faustas (example_source/main.f12:15)
                  field_decl_node: DeclUnitField
                    type: TypePrimitive
                      kind:  (example_source/main.f12:8)
                    name: name (example_source/main.f12:8)
                [1]: CreateUnitArg
                  unit_name: Human (example_source/main.f12:15)
                  field: age (example_source/main.f12:15)
                  value: ExprLitInt
                    value: 22 (example_source/main.f12:15)
                  field_decl_node: DeclUnitField
                    type: TypePrimitive
                      kind:  (example_source/main.f12:9)
                    name: age (example_source/main.f12:9)
                [2]: CreateUnitArg
                  unit_name: Human (example_source/main.f12:15)
                  field: addresses (example_source/main.f12:15)
                  value: ExprLitArray
                    value: []
                  field_decl_node: DeclUnitField
                    type: TypeArray
                      inner_type: TypePrimitive
                        kind:  (example_source/main.f12:10)
                    name: addresses (example_source/main.f12:10)
              unit_decl_node: DeclUnit
                name: Human (example_source/main.f12:7)
                fields: 
                  [0]: DeclUnitField
                    type: TypePrimitive
                      kind:  (example_source/main.f12:8)
                    name: name (example_source/main.f12:8)
                  [1]: DeclUnitField
                    type: TypePrimitive
                      kind:  (example_source/main.f12:9)
                    name: age (example_source/main.f12:9)
                  [2]: DeclUnitField
                    type: TypeArray
                      inner_type: TypePrimitive
                        kind:  (example_source/main.f12:10)
                    name: addresses (example_source/main.f12:10)
    [4]: DeclFun
      name: main (example_source/main.f12:18)
      params: []
      return_type: TypePrimitive
        kind:  (example_source/main.f12:18)
      body: StmntBlock
        statements: 
          [0]: StmntDeclVar
            type: TypePrimitive
              kind:  (example_source/main.f12:19)
            name: age (example_source/main.f12:19)
            value: ExprLitInt
              value: 22 (example_source/main.f12:19)
            is_constant: True
          [1]: StmntDeclVar
            type: TypePrimitive
              kind:  (example_source/main.f12:20)
            name: x (example_source/main.f12:20)
            value: ExprVar
              identifier: age (example_source/main.f12:20)
              decl_node: StmntDeclVar
                type: TypePrimitive
                  kind:  (example_source/main.f12:19)
                name: age (example_source/main.f12:19)
                value: ExprLitInt
                  value: 22 (example_source/main.f12:19)
                is_constant: True
            is_constant: True
          [2]: StmntDeclVar
            type: TypePrimitive
              kind:  (example_source/main.f12:21)
            name: y (example_source/main.f12:21)
            value: ExprFnCall
              function_name: add (example_source/main.f12:21)
              args: 
                [0]: ExprVar
                  identifier: x (example_source/main.f12:21)
                  decl_node: StmntDeclVar
                    type: TypePrimitive
                      kind:  (example_source/main.f12:20)
                    name: x (example_source/main.f12:20)
                    value: ExprVar
                      identifier: age (example_source/main.f12:20)
                      decl_node: StmntDeclVar
                        type: TypePrimitive
                          kind:  (example_source/main.f12:19)
                        name: age (example_source/main.f12:19)
                        value: ExprLitInt
                          value: 22 (example_source/main.f12:19)
                        is_constant: True
                    is_constant: True
                [1]: ExprLitInt
                  value: 5 (example_source/main.f12:21)
              function_decl_node: DeclFun
                name: add (example_source/main.f12:3)
                params: 
                  [0]: FunParam
                    type: TypeArray
                      inner_type: TypePrimitive
                        kind:  (example_source/main.f12:3)
                    name: x (example_source/main.f12:3)
                  [1]: FunParam
                    type: TypePrimitive
                      kind:  (example_source/main.f12:3)
                    name: y (example_source/main.f12:3)
                return_type: TypePrimitive
                  kind:  (example_source/main.f12:3)
                body: StmntBlock
                  statements: 
                    [0]: StmntReturn
                      token:  (example_source/main.f12:4)
                      value: ExprAdd
                        left: ExprArrayAccess
                          array: ExprVar
                            identifier: x (example_source/main.f12:4)
                            decl_node: FunParam
                              type: TypeArray
                                inner_type: TypePrimitive
                                  kind:  (example_source/main.f12:3)
                              name: x (example_source/main.f12:3)
                          index_expr: ExprLitInt
                            value: 0 (example_source/main.f12:4)
                        right: ExprVar
                          identifier: y (example_source/main.f12:4)
                          decl_node: FunParam
                            type: TypePrimitive
                              kind:  (example_source/main.f12:3)
                            name: y (example_source/main.f12:3)
            is_constant: False
          [3]: StmntDeclVar
            type: TypeUnit
              unit_name: Human (example_source/main.f12:23)
              unit_decl_node: DeclUnit
                name: Human (example_source/main.f12:7)
                fields: 
                  [0]: DeclUnitField
                    type: TypePrimitive
                      kind:  (example_source/main.f12:8)
                    name: name (example_source/main.f12:8)
                  [1]: DeclUnitField
                    type: TypePrimitive
                      kind:  (example_source/main.f12:9)
                    name: age (example_source/main.f12:9)
                  [2]: DeclUnitField
                    type: TypeArray
                      inner_type: TypePrimitive
                        kind:  (example_source/main.f12:10)
                    name: addresses (example_source/main.f12:10)
            name: human (example_source/main.f12:23)
            value: ExprCreateUnit
              unit_name: Human (example_source/main.f12:23)
              args: 
                [0]: CreateUnitArg
                  unit_name: Human (example_source/main.f12:23)
                  field: name (example_source/main.f12:23)
                  value: ExprLitStr
                    value: Faustas (example_source/main.f12:23)
                  field_decl_node: DeclUnitField
                    type: TypePrimitive
                      kind:  (example_source/main.f12:8)
                    name: name (example_source/main.f12:8)
                [1]: CreateUnitArg
                  unit_name: Human (example_source/main.f12:23)
                  field: age (example_source/main.f12:23)
                  value: ExprLitInt
                    value: 22 (example_source/main.f12:23)
                  field_decl_node: DeclUnitField
                    type: TypePrimitive
                      kind:  (example_source/main.f12:9)
                    name: age (example_source/main.f12:9)
                [2]: CreateUnitArg
                  unit_name: Human (example_source/main.f12:23)
                  field: addresses (example_source/main.f12:23)
                  value: ExprLitArray
                    value: []
                  field_decl_node: DeclUnitField
                    type: TypeArray
                      inner_type: TypePrimitive
                        kind:  (example_source/main.f12:10)
                    name: addresses (example_source/main.f12:10)
              unit_decl_node: DeclUnit
                name: Human (example_source/main.f12:7)
                fields: 
                  [0]: DeclUnitField
                    type: TypePrimitive
                      kind:  (example_source/main.f12:8)
                    name: name (example_source/main.f12:8)
                  [1]: DeclUnitField
                    type: TypePrimitive
                      kind:  (example_source/main.f12:9)
                    name: age (example_source/main.f12:9)
                  [2]: DeclUnitField
                    type: TypeArray
                      inner_type: TypePrimitive
                        kind:  (example_source/main.f12:10)
                    name: addresses (example_source/main.f12:10)
            is_constant: False
          [4]: StmntExpr
            expr: ExprAssign
              object: ExprAccess
                object: ExprVar
                  identifier: human (example_source/main.f12:24)
                  decl_node: StmntDeclVar
                    type: TypeUnit
                      unit_name: Human (example_source/main.f12:23)
                      unit_decl_node: DeclUnit
                        name: Human (example_source/main.f12:7)
                        fields: 
                          [0]: DeclUnitField
                            type: TypePrimitive
                              kind:  (example_source/main.f12:8)
                            name: name (example_source/main.f12:8)
                          [1]: DeclUnitField
                            type: TypePrimitive
                              kind:  (example_source/main.f12:9)
                            name: age (example_source/main.f12:9)
                          [2]: DeclUnitField
                            type: TypeArray
                              inner_type: TypePrimitive
                                kind:  (example_source/main.f12:10)
                            name: addresses (example_source/main.f12:10)
                    name: human (example_source/main.f12:23)
                    value: ExprCreateUnit
                      unit_name: Human (example_source/main.f12:23)
                      args: 
                        [0]: CreateUnitArg
                          unit_name: Human (example_source/main.f12:23)
                          field: name (example_source/main.f12:23)
                          value: ExprLitStr
                            value: Faustas (example_source/main.f12:23)
                          field_decl_node: DeclUnitField
                            type: TypePrimitive
                              kind:  (example_source/main.f12:8)
                            name: name (example_source/main.f12:8)
                        [1]: CreateUnitArg
                          unit_name: Human (example_source/main.f12:23)
                          field: age (example_source/main.f12:23)
                          value: ExprLitInt
                            value: 22 (example_source/main.f12:23)
                          field_decl_node: DeclUnitField
                            type: TypePrimitive
                              kind:  (example_source/main.f12:9)
                            name: age (example_source/main.f12:9)
                        [2]: CreateUnitArg
                          unit_name: Human (example_source/main.f12:23)
                          field: addresses (example_source/main.f12:23)
                          value: ExprLitArray
                            value: []
                          field_decl_node: DeclUnitField
                            type: TypeArray
                              inner_type: TypePrimitive
                                kind:  (example_source/main.f12:10)
                            name: addresses (example_source/main.f12:10)
                      unit_decl_node: DeclUnit
                        name: Human (example_source/main.f12:7)
                        fields: 
                          [0]: DeclUnitField
                            type: TypePrimitive
                              kind:  (example_source/main.f12:8)
                            name: name (example_source/main.f12:8)
                          [1]: DeclUnitField
                            type: TypePrimitive
                              kind:  (example_source/main.f12:9)
                            name: age (example_source/main.f12:9)
                          [2]: DeclUnitField
                            type: TypeArray
                              inner_type: TypePrimitive
                                kind:  (example_source/main.f12:10)
                            name: addresses (example_source/main.f12:10)
                    is_constant: False
                field: age (example_source/main.f12:24)
                field_decl_node: DeclUnitField
                  type: TypePrimitive
                    kind:  (example_source/main.f12:9)
                  name: age (example_source/main.f12:9)
              value: ExprFnCall
                function_name: inner (example_source/main.f12:24)
                args: []
                function_decl_node: DeclFun
                  name: inner (example_source/main.f12:13)
                  params: []
                  return_type: TypeUnit
                    unit_name: Human (example_source/main.f12:13)
                    unit_decl_node: None
                  body: StmntBlock
                    statements: 
                      [0]: StmntToStdout
                        values: 
                          [0]: ExprLitStr
                            value: Hello (example_source/main.f12:14)
                      [1]: StmntReturn
                        token:  (example_source/main.f12:15)
                        value: ExprCreateUnit
                          unit_name: Human (example_source/main.f12:15)
                          args: 
                            [0]: CreateUnitArg
                              unit_name: Human (example_source/main.f12:15)
                              field: name (example_source/main.f12:15)
                              value: ExprLitStr
                                value: Faustas (example_source/main.f12:15)
                              field_decl_node: DeclUnitField
                                type: TypePrimitive
                                  kind:  (example_source/main.f12:8)
                                name: name (example_source/main.f12:8)
                            [1]: CreateUnitArg
                              unit_name: Human (example_source/main.f12:15)
                              field: age (example_source/main.f12:15)
                              value: ExprLitInt
                                value: 22 (example_source/main.f12:15)
                              field_decl_node: DeclUnitField
                                type: TypePrimitive
                                  kind:  (example_source/main.f12:9)
                                name: age (example_source/main.f12:9)
                            [2]: CreateUnitArg
                              unit_name: Human (example_source/main.f12:15)
                              field: addresses (example_source/main.f12:15)
                              value: ExprLitArray
                                value: []
                              field_decl_node: DeclUnitField
                                type: TypeArray
                                  inner_type: TypePrimitive
                                    kind:  (example_source/main.f12:10)
                                name: addresses (example_source/main.f12:10)
                          unit_decl_node: DeclUnit
                            name: Human (example_source/main.f12:7)
                            fields: 
                              [0]: DeclUnitField
                                type: TypePrimitive
                                  kind:  (example_source/main.f12:8)
                                name: name (example_source/main.f12:8)
                              [1]: DeclUnitField
                                type: TypePrimitive
                                  kind:  (example_source/main.f12:9)
                                name: age (example_source/main.f12:9)
                              [2]: DeclUnitField
                                type: TypeArray
                                  inner_type: TypePrimitive
                                    kind:  (example_source/main.f12:10)
                                name: addresses (example_source/main.f12:10)
          [5]: StmntExpr
            expr: ExprVar
              identifier: human (example_source/main.f12:25)
              decl_node: StmntDeclVar
                type: TypeUnit
                  unit_name: Human (example_source/main.f12:23)
                  unit_decl_node: DeclUnit
                    name: Human (example_source/main.f12:7)
                    fields: 
                      [0]: DeclUnitField
                        type: TypePrimitive
                          kind:  (example_source/main.f12:8)
                        name: name (example_source/main.f12:8)
                      [1]: DeclUnitField
                        type: TypePrimitive
                          kind:  (example_source/main.f12:9)
                        name: age (example_source/main.f12:9)
                      [2]: DeclUnitField
                        type: TypeArray
                          inner_type: TypePrimitive
                            kind:  (example_source/main.f12:10)
                        name: addresses (example_source/main.f12:10)
                name: human (example_source/main.f12:23)
                value: ExprCreateUnit
                  unit_name: Human (example_source/main.f12:23)
                  args: 
                    [0]: CreateUnitArg
                      unit_name: Human (example_source/main.f12:23)
                      field: name (example_source/main.f12:23)
                      value: ExprLitStr
                        value: Faustas (example_source/main.f12:23)
                      field_decl_node: DeclUnitField
                        type: TypePrimitive
                          kind:  (example_source/main.f12:8)
                        name: name (example_source/main.f12:8)
                    [1]: CreateUnitArg
                      unit_name: Human (example_source/main.f12:23)
                      field: age (example_source/main.f12:23)
                      value: ExprLitInt
                        value: 22 (example_source/main.f12:23)
                      field_decl_node: DeclUnitField
                        type: TypePrimitive
                          kind:  (example_source/main.f12:9)
                        name: age (example_source/main.f12:9)
                    [2]: CreateUnitArg
                      unit_name: Human (example_source/main.f12:23)
                      field: addresses (example_source/main.f12:23)
                      value: ExprLitArray
                        value: []
                      field_decl_node: DeclUnitField
                        type: TypeArray
                          inner_type: TypePrimitive
                            kind:  (example_source/main.f12:10)
                        name: addresses (example_source/main.f12:10)
                  unit_decl_node: DeclUnit
                    name: Human (example_source/main.f12:7)
                    fields: 
                      [0]: DeclUnitField
                        type: TypePrimitive
                          kind:  (example_source/main.f12:8)
                        name: name (example_source/main.f12:8)
                      [1]: DeclUnitField
                        type: TypePrimitive
                          kind:  (example_source/main.f12:9)
                        name: age (example_source/main.f12:9)
                      [2]: DeclUnitField
                        type: TypeArray
                          inner_type: TypePrimitive
                            kind:  (example_source/main.f12:10)
                        name: addresses (example_source/main.f12:10)
                is_constant: False
          [6]: StmntDeclVar
            type: TypeArray
              inner_type: TypePrimitive
                kind:  (example_source/main.f12:26)
            name: array2 (example_source/main.f12:26)
            value: None
            is_constant: False
          [7]: StmntExpr
            expr: ExprAssign
              object: ExprVar
                identifier: y (example_source/main.f12:27)
                decl_node: StmntDeclVar
                  type: TypePrimitive
                    kind:  (example_source/main.f12:21)
                  name: y (example_source/main.f12:21)
                  value: ExprFnCall
                    function_name: add (example_source/main.f12:21)
                    args: 
                      [0]: ExprVar
                        identifier: x (example_source/main.f12:21)
                        decl_node: StmntDeclVar
                          type: TypePrimitive
                            kind:  (example_source/main.f12:20)
                          name: x (example_source/main.f12:20)
                          value: ExprVar
                            identifier: age (example_source/main.f12:20)
                            decl_node: StmntDeclVar
                              type: TypePrimitive
                                kind:  (example_source/main.f12:19)
                              name: age (example_source/main.f12:19)
                              value: ExprLitInt
                                value: 22 (example_source/main.f12:19)
                              is_constant: True
                          is_constant: True
                      [1]: ExprLitInt
                        value: 5 (example_source/main.f12:21)
                    function_decl_node: DeclFun
                      name: add (example_source/main.f12:3)
                      params: 
                        [0]: FunParam
                          type: TypeArray
                            inner_type: TypePrimitive
                              kind:  (example_source/main.f12:3)
                          name: x (example_source/main.f12:3)
                        [1]: FunParam
                          type: TypePrimitive
                            kind:  (example_source/main.f12:3)
                          name: y (example_source/main.f12:3)
                      return_type: TypePrimitive
                        kind:  (example_source/main.f12:3)
                      body: StmntBlock
                        statements: 
                          [0]: StmntReturn
                            token:  (example_source/main.f12:4)
                            value: ExprAdd
                              left: ExprArrayAccess
                                array: ExprVar
                                  identifier: x (example_source/main.f12:4)
                                  decl_node: FunParam
                                    type: TypeArray
                                      inner_type: TypePrimitive
                                        kind:  (example_source/main.f12:3)
                                    name: x (example_source/main.f12:3)
                                index_expr: ExprLitInt
                                  value: 0 (example_source/main.f12:4)
                              right: ExprVar
                                identifier: y (example_source/main.f12:4)
                                decl_node: FunParam
                                  type: TypePrimitive
                                    kind:  (example_source/main.f12:3)
                                  name: y (example_source/main.f12:3)
                  is_constant: False
              value: ExprLitInt
                value: 5 (example_source/main.f12:27)
          [8]: StmntExpr
            expr: ExprAssign
              object: ExprArrayAccess
                array: ExprVar
                  identifier: array2 (example_source/main.f12:28)
                  decl_node: StmntDeclVar
                    type: TypeArray
                      inner_type: TypePrimitive
                        kind:  (example_source/main.f12:26)
                    name: array2 (example_source/main.f12:26)
                    value: None
                    is_constant: False
                index_expr: ExprLitInt
                  value: 3 (example_source/main.f12:28)
              value: ExprLitInt
                value: 5 (example_source/main.f12:28)
          [9]: StmntToStdout
            values: 
              [0]: ExprLitStr
                value: A human named  (example_source/main.f12:35)
              [1]: ExprAccess
                object: ExprVar
                  identifier: human (example_source/main.f12:35)
                  decl_node: StmntDeclVar
                    type: TypeUnit
                      unit_name: Human (example_source/main.f12:23)
                      unit_decl_node: DeclUnit
                        name: Human (example_source/main.f12:7)
                        fields: 
                          [0]: DeclUnitField
                            type: TypePrimitive
                              kind:  (example_source/main.f12:8)
                            name: name (example_source/main.f12:8)
                          [1]: DeclUnitField
                            type: TypePrimitive
                              kind:  (example_source/main.f12:9)
                            name: age (example_source/main.f12:9)
                          [2]: DeclUnitField
                            type: TypeArray
                              inner_type: TypePrimitive
                                kind:  (example_source/main.f12:10)
                            name: addresses (example_source/main.f12:10)
                    name: human (example_source/main.f12:23)
                    value: ExprCreateUnit
                      unit_name: Human (example_source/main.f12:23)
                      args: 
                        [0]: CreateUnitArg
                          unit_name: Human (example_source/main.f12:23)
                          field: name (example_source/main.f12:23)
                          value: ExprLitStr
                            value: Faustas (example_source/main.f12:23)
                          field_decl_node: DeclUnitField
                            type: TypePrimitive
                              kind:  (example_source/main.f12:8)
                            name: name (example_source/main.f12:8)
                        [1]: CreateUnitArg
                          unit_name: Human (example_source/main.f12:23)
                          field: age (example_source/main.f12:23)
                          value: ExprLitInt
                            value: 22 (example_source/main.f12:23)
                          field_decl_node: DeclUnitField
                            type: TypePrimitive
                              kind:  (example_source/main.f12:9)
                            name: age (example_source/main.f12:9)
                        [2]: CreateUnitArg
                          unit_name: Human (example_source/main.f12:23)
                          field: addresses (example_source/main.f12:23)
                          value: ExprLitArray
                            value: []
                          field_decl_node: DeclUnitField
                            type: TypeArray
                              inner_type: TypePrimitive
                                kind:  (example_source/main.f12:10)
                            name: addresses (example_source/main.f12:10)
                      unit_decl_node: DeclUnit
                        name: Human (example_source/main.f12:7)
                        fields: 
                          [0]: DeclUnitField
                            type: TypePrimitive
                              kind:  (example_source/main.f12:8)
                            name: name (example_source/main.f12:8)
                          [1]: DeclUnitField
                            type: TypePrimitive
                              kind:  (example_source/main.f12:9)
                            name: age (example_source/main.f12:9)
                          [2]: DeclUnitField
                            type: TypeArray
                              inner_type: TypePrimitive
                                kind:  (example_source/main.f12:10)
                            name: addresses (example_source/main.f12:10)
                    is_constant: False
                field: name (example_source/main.f12:35)
                field_decl_node: DeclUnitField
                  type: TypePrimitive
                    kind:  (example_source/main.f12:8)
                  name: name (example_source/main.f12:8)
          [10]: StmntDeclVar
            type: TypeArray
              inner_type: TypePrimitive
                kind:  (example_source/main.f12:37)
            name: array (example_source/main.f12:37)
            value: ExprLitArray
              value: 
                [0]: ExprLitInt
                  value: 1 (example_source/main.f12:37)
                [1]: ExprLitInt
                  value: 2 (example_source/main.f12:37)
                [2]: ExprLitInt
                  value: 3 (example_source/main.f12:37)
                [3]: ExprLitInt
                  value: 4 (example_source/main.f12:37)
            is_constant: True
          [11]: StmntToStdout
            values: 
              [0]: ExprArrayAccess
                array: ExprVar
                  identifier: array (example_source/main.f12:39)
                  decl_node: StmntDeclVar
                    type: TypeArray
                      inner_type: TypePrimitive
                        kind:  (example_source/main.f12:37)
                    name: array (example_source/main.f12:37)
                    value: ExprLitArray
                      value: 
                        [0]: ExprLitInt
                          value: 1 (example_source/main.f12:37)
                        [1]: ExprLitInt
                          value: 2 (example_source/main.f12:37)
                        [2]: ExprLitInt
                          value: 3 (example_source/main.f12:37)
                        [3]: ExprLitInt
                          value: 4 (example_source/main.f12:37)
                    is_constant: True
                index_expr: ExprLitInt
                  value: 2 (example_source/main.f12:39)
          [12]: StmntEach
            element: DeclArrayElement
              name: iter_el (example_source/main.f12:42)
              iterable_node: ExprVar
                identifier: array (example_source/main.f12:42)
                decl_node: StmntDeclVar
                  type: TypeArray
                    inner_type: TypePrimitive
                      kind:  (example_source/main.f12:37)
                  name: array (example_source/main.f12:37)
                  value: ExprLitArray
                    value: 
                      [0]: ExprLitInt
                        value: 1 (example_source/main.f12:37)
                      [1]: ExprLitInt
                        value: 2 (example_source/main.f12:37)
                      [2]: ExprLitInt
                        value: 3 (example_source/main.f12:37)
                      [3]: ExprLitInt
                        value: 4 (example_source/main.f12:37)
                  is_constant: True
            array: ExprVar
              identifier: array (example_source/main.f12:42)
              decl_node: StmntDeclVar
                type: TypeArray
                  inner_type: TypePrimitive
                    kind:  (example_source/main.f12:37)
                name: array (example_source/main.f12:37)
                value: ExprLitArray
                  value: 
                    [0]: ExprLitInt
                      value: 1 (example_source/main.f12:37)
                    [1]: ExprLitInt
                      value: 2 (example_source/main.f12:37)
                    [2]: ExprLitInt
                      value: 3 (example_source/main.f12:37)
                    [3]: ExprLitInt
                      value: 4 (example_source/main.f12:37)
                is_constant: True
            stmnt_block: StmntBlock
              statements: 
                [0]: StmntToStdout
                  values: 
                    [0]: ExprAdd
                      left: ExprVar
                        identifier: iter_el (example_source/main.f12:43)
                        decl_node: DeclArrayElement
                          name: iter_el (example_source/main.f12:42)
                          iterable_node: ExprVar
                            identifier: array (example_source/main.f12:42)
                            decl_node: StmntDeclVar
                              type: TypeArray
                                inner_type: TypePrimitive
                                  kind:  (example_source/main.f12:37)
                              name: array (example_source/main.f12:37)
                              value: ExprLitArray
                                value: 
                                  [0]: ExprLitInt
                                    value: 1 (example_source/main.f12:37)
                                  [1]: ExprLitInt
                                    value: 2 (example_source/main.f12:37)
                                  [2]: ExprLitInt
                                    value: 3 (example_source/main.f12:37)
                                  [3]: ExprLitInt
                                    value: 4 (example_source/main.f12:37)
                              is_constant: True
                      right: ExprLitInt
                        value: 5 (example_source/main.f12:43)
          [13]: StmntIf
            condition: ExprAnd
              left: ExprGt
                left: ExprVar
                  identifier: y (example_source/main.f12:46)
                  decl_node: StmntDeclVar
                    type: TypePrimitive
                      kind:  (example_source/main.f12:21)
                    name: y (example_source/main.f12:21)
                    value: ExprFnCall
                      function_name: add (example_source/main.f12:21)
                      args: 
                        [0]: ExprVar
                          identifier: x (example_source/main.f12:21)
                          decl_node: StmntDeclVar
                            type: TypePrimitive
                              kind:  (example_source/main.f12:20)
                            name: x (example_source/main.f12:20)
                            value: ExprVar
                              identifier: age (example_source/main.f12:20)
                              decl_node: StmntDeclVar
                                type: TypePrimitive
                                  kind:  (example_source/main.f12:19)
                                name: age (example_source/main.f12:19)
                                value: ExprLitInt
                                  value: 22 (example_source/main.f12:19)
                                is_constant: True
                            is_constant: True
                        [1]: ExprLitInt
                          value: 5 (example_source/main.f12:21)
                      function_decl_node: DeclFun
                        name: add (example_source/main.f12:3)
                        params: 
                          [0]: FunParam
                            type: TypeArray
                              inner_type: TypePrimitive
                                kind:  (example_source/main.f12:3)
                            name: x (example_source/main.f12:3)
                          [1]: FunParam
                            type: TypePrimitive
                              kind:  (example_source/main.f12:3)
                            name: y (example_source/main.f12:3)
                        return_type: TypePrimitive
                          kind:  (example_source/main.f12:3)
                        body: StmntBlock
                          statements: 
                            [0]: StmntReturn
                              token:  (example_source/main.f12:4)
                              value: ExprAdd
                                left: ExprArrayAccess
                                  array: ExprVar
                                    identifier: x (example_source/main.f12:4)
                                    decl_node: FunParam
                                      type: TypeArray
                                        inner_type: TypePrimitive
                                          kind:  (example_source/main.f12:3)
                                      name: x (example_source/main.f12:3)
                                  index_expr: ExprLitInt
                                    value: 0 (example_source/main.f12:4)
                                right: ExprVar
                                  identifier: y (example_source/main.f12:4)
                                  decl_node: FunParam
                                    type: TypePrimitive
                                      kind:  (example_source/main.f12:3)
                                    name: y (example_source/main.f12:3)
                    is_constant: False
                right: ExprLitInt
                  value: 5 (example_source/main.f12:46)
              right: ExprGt
                left: ExprAdd
                  left: ExprLitInt
                    value: 5 (example_source/main.f12:46)
                  right: ExprLitInt
                    value: 8 (example_source/main.f12:46)
                right: ExprLitInt
                  value: 10 (example_source/main.f12:46)
            stmnt_block: StmntBlock
              statements: []
            else_clause: StmntIf
              condition: ExprEq
                left: ExprVar
                  identifier: y (example_source/main.f12:48)
                  decl_node: StmntDeclVar
                    type: TypePrimitive
                      kind:  (example_source/main.f12:21)
                    name: y (example_source/main.f12:21)
                    value: ExprFnCall
                      function_name: add (example_source/main.f12:21)
                      args: 
                        [0]: ExprVar
                          identifier: x (example_source/main.f12:21)
                          decl_node: StmntDeclVar
                            type: TypePrimitive
                              kind:  (example_source/main.f12:20)
                            name: x (example_source/main.f12:20)
                            value: ExprVar
                              identifier: age (example_source/main.f12:20)
                              decl_node: StmntDeclVar
                                type: TypePrimitive
                                  kind:  (example_source/main.f12:19)
                                name: age (example_source/main.f12:19)
                                value: ExprLitInt
                                  value: 22 (example_source/main.f12:19)
                                is_constant: True
                            is_constant: True
                        [1]: ExprLitInt
                          value: 5 (example_source/main.f12:21)
                      function_decl_node: DeclFun
                        name: add (example_source/main.f12:3)
                        params: 
                          [0]: FunParam
                            type: TypeArray
                              inner_type: TypePrimitive
                                kind:  (example_source/main.f12:3)
                            name: x (example_source/main.f12:3)
                          [1]: FunParam
                            type: TypePrimitive
                              kind:  (example_source/main.f12:3)
                            name: y (example_source/main.f12:3)
                        return_type: TypePrimitive
                          kind:  (example_source/main.f12:3)
                        body: StmntBlock
                          statements: 
                            [0]: StmntReturn
                              token:  (example_source/main.f12:4)
                              value: ExprAdd
                                left: ExprArrayAccess
                                  array: ExprVar
                                    identifier: x (example_source/main.f12:4)
                                    decl_node: FunParam
                                      type: TypeArray
                                        inner_type: TypePrimitive
                                          kind:  (example_source/main.f12:3)
                                      name: x (example_source/main.f12:3)
                                  index_expr: ExprLitInt
                                    value: 0 (example_source/main.f12:4)
                                right: ExprVar
                                  identifier: y (example_source/main.f12:4)
                                  decl_node: FunParam
                                    type: TypePrimitive
                                      kind:  (example_source/main.f12:3)
                                    name: y (example_source/main.f12:3)
                    is_constant: False
                right: ExprLitInt
                  value: 0 (example_source/main.f12:48)
              stmnt_block: StmntBlock
                statements: []
              else_clause: StmntBlock
                statements: []
          [14]: StmntIf
            condition: ExprVar
              identifier: y (example_source/main.f12:54)
              decl_node: StmntDeclVar
                type: TypePrimitive
                  kind:  (example_source/main.f12:21)
                name: y (example_source/main.f12:21)
                value: ExprFnCall
                  function_name: add (example_source/main.f12:21)
                  args: 
                    [0]: ExprVar
                      identifier: x (example_source/main.f12:21)
                      decl_node: StmntDeclVar
                        type: TypePrimitive
                          kind:  (example_source/main.f12:20)
                        name: x (example_source/main.f12:20)
                        value: ExprVar
                          identifier: age (example_source/main.f12:20)
                          decl_node: StmntDeclVar
                            type: TypePrimitive
                              kind:  (example_source/main.f12:19)
                            name: age (example_source/main.f12:19)
                            value: ExprLitInt
                              value: 22 (example_source/main.f12:19)
                            is_constant: True
                        is_constant: True
                    [1]: ExprLitInt
                      value: 5 (example_source/main.f12:21)
                  function_decl_node: DeclFun
                    name: add (example_source/main.f12:3)
                    params: 
                      [0]: FunParam
                        type: TypeArray
                          inner_type: TypePrimitive
                            kind:  (example_source/main.f12:3)
                        name: x (example_source/main.f12:3)
                      [1]: FunParam
                        type: TypePrimitive
                          kind:  (example_source/main.f12:3)
                        name: y (example_source/main.f12:3)
                    return_type: TypePrimitive
                      kind:  (example_source/main.f12:3)
                    body: StmntBlock
                      statements: 
                        [0]: StmntReturn
                          token:  (example_source/main.f12:4)
                          value: ExprAdd
                            left: ExprArrayAccess
                              array: ExprVar
                                identifier: x (example_source/main.f12:4)
                                decl_node: FunParam
                                  type: TypeArray
                                    inner_type: TypePrimitive
                                      kind:  (example_source/main.f12:3)
                                  name: x (example_source/main.f12:3)
                              index_expr: ExprLitInt
                                value: 0 (example_source/main.f12:4)
                            right: ExprVar
                              identifier: y (example_source/main.f12:4)
                              decl_node: FunParam
                                type: TypePrimitive
                                  kind:  (example_source/main.f12:3)
                                name: y (example_source/main.f12:3)
                is_constant: False
            stmnt_block: StmntBlock
              statements: 
                [0]: StmntEmpty
            else_clause: None
          [15]: StmntWhile
            condition: ExprNe
              left: ExprVar
                identifier: y (example_source/main.f12:56)
                decl_node: StmntDeclVar
                  type: TypePrimitive
                    kind:  (example_source/main.f12:21)
                  name: y (example_source/main.f12:21)
                  value: ExprFnCall
                    function_name: add (example_source/main.f12:21)
                    args: 
                      [0]: ExprVar
                        identifier: x (example_source/main.f12:21)
                        decl_node: StmntDeclVar
                          type: TypePrimitive
                            kind:  (example_source/main.f12:20)
                          name: x (example_source/main.f12:20)
                          value: ExprVar
                            identifier: age (example_source/main.f12:20)
                            decl_node: StmntDeclVar
                              type: TypePrimitive
                                kind:  (example_source/main.f12:19)
                              name: age (example_source/main.f12:19)
                              value: ExprLitInt
                                value: 22 (example_source/main.f12:19)
                              is_constant: True
                          is_constant: True
                      [1]: ExprLitInt
                        value: 5 (example_source/main.f12:21)
                    function_decl_node: DeclFun
                      name: add (example_source/main.f12:3)
                      params: 
                        [0]: FunParam
                          type: TypeArray
                            inner_type: TypePrimitive
                              kind:  (example_source/main.f12:3)
                          name: x (example_source/main.f12:3)
                        [1]: FunParam
                          type: TypePrimitive
                            kind:  (example_source/main.f12:3)
                          name: y (example_source/main.f12:3)
                      return_type: TypePrimitive
                        kind:  (example_source/main.f12:3)
                      body: StmntBlock
                        statements: 
                          [0]: StmntReturn
                            token:  (example_source/main.f12:4)
                            value: ExprAdd
                              left: ExprArrayAccess
                                array: ExprVar
                                  identifier: x (example_source/main.f12:4)
                                  decl_node: FunParam
                                    type: TypeArray
                                      inner_type: TypePrimitive
                                        kind:  (example_source/main.f12:3)
                                    name: x (example_source/main.f12:3)
                                index_expr: ExprLitInt
                                  value: 0 (example_source/main.f12:4)
                              right: ExprVar
                                identifier: y (example_source/main.f12:4)
                                decl_node: FunParam
                                  type: TypePrimitive
                                    kind:  (example_source/main.f12:3)
                                  name: y (example_source/main.f12:3)
                  is_constant: False
              right: ExprLitInt
                value: 0 (example_source/main.f12:56)
            stmnt_block: StmntBlock
              statements: 
                [0]: StmntIf
                  condition: ExprEq
                    left: ExprVar
                      identifier: y (example_source/main.f12:59)
                      decl_node: StmntDeclVar
                        type: TypePrimitive
                          kind:  (example_source/main.f12:21)
                        name: y (example_source/main.f12:21)
                        value: ExprFnCall
                          function_name: add (example_source/main.f12:21)
                          args: 
                            [0]: ExprVar
                              identifier: x (example_source/main.f12:21)
                              decl_node: StmntDeclVar
                                type: TypePrimitive
                                  kind:  (example_source/main.f12:20)
                                name: x (example_source/main.f12:20)
                                value: ExprVar
                                  identifier: age (example_source/main.f12:20)
                                  decl_node: StmntDeclVar
                                    type: TypePrimitive
                                      kind:  (example_source/main.f12:19)
                                    name: age (example_source/main.f12:19)
                                    value: ExprLitInt
                                      value: 22 (example_source/main.f12:19)
                                    is_constant: True
                                is_constant: True
                            [1]: ExprLitInt
                              value: 5 (example_source/main.f12:21)
                          function_decl_node: DeclFun
                            name: add (example_source/main.f12:3)
                            params: 
                              [0]: FunParam
                                type: TypeArray
                                  inner_type: TypePrimitive
                                    kind:  (example_source/main.f12:3)
                                name: x (example_source/main.f12:3)
                              [1]: FunParam
                                type: TypePrimitive
                                  kind:  (example_source/main.f12:3)
                                name: y (example_source/main.f12:3)
                            return_type: TypePrimitive
                              kind:  (example_source/main.f12:3)
                            body: StmntBlock
                              statements: 
                                [0]: StmntReturn
                                  token:  (example_source/main.f12:4)
                                  value: ExprAdd
                                    left: ExprArrayAccess
                                      array: ExprVar
                                        identifier: x (example_source/main.f12:4)
                                        decl_node: FunParam
                                          type: TypeArray
                                            inner_type: TypePrimitive
                                              kind:  (example_source/main.f12:3)
                                          name: x (example_source/main.f12:3)
                                      index_expr: ExprLitInt
                                        value: 0 (example_source/main.f12:4)
                                    right: ExprVar
                                      identifier: y (example_source/main.f12:4)
                                      decl_node: FunParam
                                        type: TypePrimitive
                                          kind:  (example_source/main.f12:3)
                                        name: y (example_source/main.f12:3)
                        is_constant: False
                    right: ExprUMinus
                      expr: ExprLitInt
                        value: 1000 (example_source/main.f12:59)
                  stmnt_block: StmntBlock
                    statements: 
                      [0]: StmntBreak
                        token:  (example_source/main.f12:60)
                  else_clause: None
                [1]: StmntIf
                  condition: ExprEq
                    left: ExprVar
                      identifier: y (example_source/main.f12:63)
                      decl_node: StmntDeclVar
                        type: TypePrimitive
                          kind:  (example_source/main.f12:21)
                        name: y (example_source/main.f12:21)
                        value: ExprFnCall
                          function_name: add (example_source/main.f12:21)
                          args: 
                            [0]: ExprVar
                              identifier: x (example_source/main.f12:21)
                              decl_node: StmntDeclVar
                                type: TypePrimitive
                                  kind:  (example_source/main.f12:20)
                                name: x (example_source/main.f12:20)
                                value: ExprVar
                                  identifier: age (example_source/main.f12:20)
                                  decl_node: StmntDeclVar
                                    type: TypePrimitive
                                      kind:  (example_source/main.f12:19)
                                    name: age (example_source/main.f12:19)
                                    value: ExprLitInt
                                      value: 22 (example_source/main.f12:19)
                                    is_constant: True
                                is_constant: True
                            [1]: ExprLitInt
                              value: 5 (example_source/main.f12:21)
                          function_decl_node: DeclFun
                            name: add (example_source/main.f12:3)
                            params: 
                              [0]: FunParam
                                type: TypeArray
                                  inner_type: TypePrimitive
                                    kind:  (example_source/main.f12:3)
                                name: x (example_source/main.f12:3)
                              [1]: FunParam
                                type: TypePrimitive
                                  kind:  (example_source/main.f12:3)
                                name: y (example_source/main.f12:3)
                            return_type: TypePrimitive
                              kind:  (example_source/main.f12:3)
                            body: StmntBlock
                              statements: 
                                [0]: StmntReturn
                                  token:  (example_source/main.f12:4)
                                  value: ExprAdd
                                    left: ExprArrayAccess
                                      array: ExprVar
                                        identifier: x (example_source/main.f12:4)
                                        decl_node: FunParam
                                          type: TypeArray
                                            inner_type: TypePrimitive
                                              kind:  (example_source/main.f12:3)
                                          name: x (example_source/main.f12:3)
                                      index_expr: ExprLitInt
                                        value: 0 (example_source/main.f12:4)
                                    right: ExprVar
                                      identifier: y (example_source/main.f12:4)
                                      decl_node: FunParam
                                        type: TypePrimitive
                                          kind:  (example_source/main.f12:3)
                                        name: y (example_source/main.f12:3)
                        is_constant: False
                    right: ExprLitInt
                      value: 59 (example_source/main.f12:63)
                  stmnt_block: StmntBlock
                    statements: 
                      [0]: StmntContinue
                        token:  (example_source/main.f12:64)
                  else_clause: None
          [16]: StmntDeclVar
            type: TypePrimitive
              kind:  (example_source/main.f12:68)
            name: name (example_source/main.f12:68)
            value: ExprFromStdin
            is_constant: False
          [17]: StmntToStdout
            values: 
              [0]: ExprLitStr
                value: Hello,  (example_source/main.f12:69)
              [1]: ExprVar
                identifier: name (example_source/main.f12:69)
                decl_node: StmntDeclVar
                  type: TypePrimitive
                    kind:  (example_source/main.f12:68)
                  name: name (example_source/main.f12:68)
                  value: ExprFromStdin
                  is_constant: False
          [18]: StmntReturn
            token:  (example_source/main.f12:71)
            value: ExprLitInt
              value: 0 (example_source/main.f12:71)
