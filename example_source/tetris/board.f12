const int BOARD_HEIGHT = 30;
const int BOARD_WIDTH = 50;

const int LEFT_WALL = 0;
const int RIGHT_WALL = BOARD_WIDTH - 1;
const int FLOOR = BOARD_HEIGHT - 1;

const char WALL_CHAR = '|';
const char FLOOR_CHAR = '-';
const char BACKGROUND_CHAR = ' ';

const char MOVE_LEFT = 'a';
const char MOVE_RIGHT = 'd';
const char MOVE_DOWN = 's';
const char ROTATE = 'w';

const char BLOCK_CHAR = '*';

int falling_block_centre_x;
int falling_block_centre_y;

char[][] board;
char[] input_buff = new char[15];

fun init_board {
    board = new char[][BOARD_HEIGHT];

    int row = 0;
    while row < BOARD_HEIGHT {
        board[row] = new char[BOARD_WIDTH];

        int column = 0;
        while column < BOARD_WIDTH {
            board[row][column] = determine_char(column, row);
            column = column + 1;
        }

        row = row + 1;
    }

    reset_falling_block();
}

fun print_board {
    int row = 0;
    while row < BOARD_HEIGHT {
        int column = 0;
        while column < BOARD_WIDTH {
            put_char_x_y(board[row][column], column, row);
            column = column + 1;
        }

        row = row + 1;
    }
}

fun process_frame {
    paint_falling_block(BACKGROUND_CHAR);

    falling_block_centre_y = falling_block_centre_y + 1;

    int chars_read = get_input(input_buff);
    process_input(chars_read);

    paint_falling_block(BLOCK_CHAR);
}

fun process_input(int chars_read) {
    int i = 0;
    while i < chars_read {
        char c = input_buff[i];

        if c == MOVE_LEFT {
            falling_block_centre_x = falling_block_centre_x - 1;
        }

        if c == MOVE_RIGHT {
            falling_block_centre_x = falling_block_centre_x + 1;
        }

        if c == MOVE_DOWN {
            falling_block_centre_y = falling_block_centre_y + 1;
        }

        i = i + 1;
    }
}

fun paint_falling_block(char c) {
    board[falling_block_centre_y][falling_block_centre_x] = c;
}

fun reset_falling_block {
    falling_block_centre_x = BOARD_WIDTH / 2;
    falling_block_centre_y = 0;
}

fun determine_char(int column, int row) => char {
    if is_wall(column, row) {
        ret WALL_CHAR;
    }

    if is_floor(column, row) {
        ret FLOOR_CHAR;
    }

    ret BACKGROUND_CHAR;
}

fun is_wall(int x, int y) => bool {
    if y == BOARD_HEIGHT {
        ret false;
    }

    ret x == LEFT_WALL || x == RIGHT_WALL;
}

fun is_floor(int x, int y) => bool {
    ret y == FLOOR;
}